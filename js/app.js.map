{"version":3,"sources":["init.js","app.js","game.js"],"names":["processHash","hash","location","app","router","run","slice","Rlite","add","buildBoard","getCards","numPairs","cards","split","cardsArr","concat","shuffle","arr","i","length","x","Math","floor","random","y","tmp","template","_","$","html","variable","deck","on","flipBackOver","toggleClass","removeClass","tile","this","addClass","console","log","innerText","setTimeout","window","addEventListener"],"mappings":"AAAA,QAAAA,eACA,GAAAC,GAAAC,SAAAD,MAAA,GACAE,KAAAC,OAAAC,IAAAJ,EAAAK,MAAA,ICDA,GAAAH,MACAC,OAAAG,QCFAJ,KAAAC,OAAAI,IAAA,OAAA,WAGA,QAAAC,KAEA,GAAAN,KAEAA,GAAAO,SAAA,SAAAC,GACA,GAAAC,GAAA,YAAAC,MAAA,IAAAP,MAAA,EAAAK,GAEAG,EAAAF,EAAAG,OAAAH,EAEA,OAAAT,GAAAa,QAAAF,IAGAX,EAAAa,QAAA,SAAAC,GAEA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,SAAAD,EAAA,CACA,GAAAE,GAAAC,KAAAC,MAAAD,KAAAE,SAAAN,EAAAE,QACAK,EAAAH,KAAAC,MAAAD,KAAAE,SAAAN,EAAAE,QACAM,EAAAR,EAAAG,EAEAH,GAAAG,GAAAH,EAAAO,GACAP,EAAAO,GAAAC,EAEA,MAAAR,GAGA,IAAAN,GAAA,EACAG,EAAAX,EAAAO,SAAAC,GACAe,EAAAC,EAAAD,SAAAE,EAAA,SAAAC,QAAAC,SAAA,KAEAF,GAAA,SAAAC,KAAAH,GAAAK,KAAAjB,KA/BAL,IAwCAmB,EAAA,SAAAI,GAAA,QAAA,aAAA,WAaA,QAAAC,KACAL,EAAA,YAAAM,YAAA,yBACAN,EAAA,YAAAO,YAAA,WAdA,GAAAC,GAAAR,EAAAS,KACAT,GAAAQ,GAAAE,SAAA,WACAC,QAAAC,IAAAJ,GACAR,EAAAQ,GAAAF,YAAA,yBAEAN,EAAA,YAAAT,OAAA,IAEAS,EAAA,YAAA,GAAAa,YAAAb,EAAA,YAAA,GAAAa,WACAF,QAAAC,IAAA,eACAZ,EAAA,YAAAO,YAAA,YAQAO,WAAAT,EAAA,UFtDAU,OAAAC,iBAAA,aAAA5C,aACAA","file":"app.js","sourcesContent":["function processHash() {\n  var hash = location.hash || '#';\n  app.router.run(hash.slice(1));\n}\n\nwindow.addEventListener('hashchange', processHash);\nprocessHash();\n","// The namespace for this application\nvar app = {\n  router: Rlite()\n};\n","app.router.add('easy', function(){\n  buildBoard();\n\n  function buildBoard() {\n\n    var app = {};\n\n    app.getCards = function(numPairs) {\n      var cards = 'CDSVGYNMW'.split('').slice(0, numPairs);\n\n      var cardsArr = cards.concat(cards);\n\n      return app.shuffle(cardsArr);\n    };\n\n    app.shuffle = function(arr) {\n\n      for (i = 0; i < arr.length; ++i) {\n        var x = Math.floor(Math.random() * arr.length);\n        var y = Math.floor(Math.random() * arr.length);\n        var tmp = arr[x];\n\n        arr[x] = arr[y];\n        arr[y] = tmp;\n      }\n      return arr;\n    };\n\n    var numPairs = 9;\n    var cardsArr = app.getCards(numPairs);\n    var template = _.template($('#tile').html(), { variable: 'm'});\n\n    $('.grid').html(template({ deck: cardsArr}));\n  }\n\n  // $('.grid-cell').click(function(e) {\n  //   var tile = e.target;\n  //   console.log(tile);\n  //   // e.preventDefault();\n  //   // e && (e.preventDefault() || e.stopPropagation());\n  // });\n  $('.grid').on('click', '.grid-cell', function(evt) {\n    var tile = $(this);\n    $(tile).addClass('clicked');\n    console.log(tile);\n    $(tile).toggleClass('grid-cell-not-clicked');\n\n    if ($('.clicked').length > 1) {\n\n      if ($('.clicked')[0].innerText === $('.clicked')[1].innerText) {\n        console.log('got a match');\n        $('.clicked').removeClass('clicked');\n      } else {\n\n        function flipBackOver() {\n          $('.clicked').toggleClass('grid-cell-not-clicked');\n          $('.clicked').removeClass('clicked');\n        }\n\n        setTimeout(flipBackOver, 750);\n      }\n    }\n\n    // if ($('.clicked-first').length > 0) {\n    //   console.log('we need to compare');\n    //   var firstTxt = $('.clicked-first')[0].innerText;\n    //   var secondTxt = $('.grid-icon', tile)[0].innerText;\n    //   $('.clicked-first').off('click');\n    //   tile.toggleClass('grid-cell-not-clicked');\n    //   $('.grid-icon', tile).toggleClass('grid-icon-not-clicked');\n    //\n    //   // if (firstTxt === secondTxt) {\n    //   //   console.log('got a match');\n    //   // } else {\n    //   //   console.log('not a match');\n    //   //   var clickedTile = $('.clicked');\n    //   //   clickedTile.toggleClass('grid-cell-not-clicked');\n    //   //   $('.grid-icon', clickedTile).toggleClass('grid-icon-not-clicked');\n    //   //   tile.toggleClass('grid-cell-not-clicked');\n    //   //   $('.grid-icon', tile).toggleClass('grid-icon-not-clicked');\n    //   //   $('.clicked').removeClass('clicked');\n    //   // }\n    //\n    // } else {\n    //   $(tile).toggleClass('grid-cell-not-clicked');\n    //   $('.grid-icon', tile).toggleClass('grid-icon-not-clicked');\n    // }\n  });\n});\n"],"sourceRoot":"/source/"}